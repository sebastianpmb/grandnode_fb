@using Grand.Business.Core.Interfaces.Common.Security
@using Grand.Web.Common.Menu
@using Grand.Business.Core.Interfaces.System.Admin
@inject IPermissionService permissionService
@inject IWorkContext workContext
@inject IAdminSiteMapService adminSiteMapService
@inject IEnumerable<IAdminMenuProvider> _adminMenuProviders
@inject Grand.Business.Core.Interfaces.Common.Directory.IGroupService groupService
@inject Grand.Business.Core.Interfaces.Storage.IPictureService pictureService
@inject Grand.Business.Core.Interfaces.Customers.IVendorService vendorService

@{
    //load sitemap
    var currentCustomer = workContext.CurrentCustomer;
    var siteMap = new SiteMap(adminSiteMapService, permissionService);
    await siteMap.Load();
}
<div id="sidebar-button" class="sidebar_button" onclick="sidebarToggle()">
    <span></span>
    <span></span>
    <span></span>
</div>
<div class="col-md-3 left_col">
    <div class="left_col scroll-view">
        <div class="navbar nav_title">
            @{
                var vendor = await vendorService.GetVendorById(currentCustomer.VendorId);
                var pictureURL = "";
                @if (vendor != null) {
                var vendorPicture = await pictureService.GetPictureById(vendor.PictureId);
                pictureURL = await pictureService.GetPictureUrl(vendorPicture);
                }


            }
            <a href="~/Admin" class="site_title">
            @if (currentCustomer != null && await groupService.IsVendor(currentCustomer) && pictureURL != null)
            {
               <img src="@(pictureURL)" width="50" height="50" /> 
            } else if (currentCustomer != null && await groupService.IsRegistered(currentCustomer))
            {
            <img src="@(Common.WwwRoot)/administration/build/images/fanbaseLogo.jpeg" width="50" height="50" /> 
            } 
            <span>GrandNode</span>
            </a>
        </div>
        <div class="clearfix"></div>
        <div class="main_menu_side hidden-print main_menu" id="sidebar-menu">
            <div class="menu_section">
                <ul class="nav side-menu page-sidebar-menu">
                    @{
                        //standard (default) items
                        var rootNode = siteMap.RootNode;

                        //plugins
                        foreach (var adminMenuPlugin in _adminMenuProviders.ToList())
                        {
                            await adminMenuPlugin.ManageSiteMap(rootNode);
                        }
                        //"Plugins" menu item should be visible when it has some child nodes
                        var pluginNode = rootNode.ChildNodes.FirstOrDefault(x => x.SystemName == "Third party plugins");
                        if (pluginNode is {Visible: true })
                        {
                            var hasManagePluginsPermission = await permissionService.Authorize(Grand.Business.Core.Utilities.Common.Security.StandardPermission.ManagePlugins);
                            pluginNode.Visible = hasManagePluginsPermission && pluginNode.ChildNodes.Any(x => x.Visible);
                        }
                    }
                    @foreach (var item in rootNode.ChildNodes.Where(x => x.Visible))
                    {
                        <partial name="Partials/MenuItem" model="item" />
                    }
                </ul>
            </div>
        </div>
    </div>
</div>