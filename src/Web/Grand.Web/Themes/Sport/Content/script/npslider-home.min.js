Vue.use(VueAwesomeSwiper); var HomePageNewProducts = Vue.extend({ data: function () { return { Model: null, swiperOptions: { effect: "fade", lazy: { preloaderClass: "preloader" }, autoplay: { delay: 5e3 }, fadeEffect: { crossFade: !0 }, pagination: { el: "#hpnslider .swiper-pagination", clickable: !0 }, navigation: { nextEl: "#hpnslider .swiper-button-next", prevEl: "#hpnslider .swiper-button-prev" }, scrollbar: { el: "#hpnslider .swiper-scrollbar", draggable: !0, hide: !1 }, slidesPerView: 1, on: { init: function () { hpnslider.progressBarIn(this), hpnslider.animateIn(this) }, slideChangeTransitionStart: function () { hpnslider.progressBarIn(this), hpnslider.animateIn(this) }, activeIndexChange: function () { hpnslider.progressBarOut(this), hpnslider.animateOut(this) } } } } }, methods: { animateIn: function (e) { "object" == typeof hpnslider.Model && 0 < e.slides.length && e.slides[e.activeIndex].querySelectorAll(".animate__animated").forEach(function (e) { var t = e.dataset.delay, i = e.dataset.animation; e.classList.add(t), e.classList.add(i) }) }, animateOut: function (e) { "object" == typeof hpnslider.Model && e.slides[e.previousIndex].querySelectorAll(".animate__animated").forEach(function (e) { var t = e.dataset.delay, i = e.dataset.animation; e.classList.remove(t), e.classList.remove(i) }) }, progressBarIn: function (e) { e.scrollbar.init(), e.el.querySelector("#hpnslider .swiper-scrollbar").offsetWidth, e.el.querySelector("#hpnslider .swiper-scrollbar").classList.add("progressAnimation"), e.scrollbar.dragEl.style.animationDuration = "5s" }, progressBarOut: function (e) { e.scrollbar.init(), e.el.querySelector("#hpnslider .swiper-scrollbar").offsetWidth, e.el.querySelector("#hpnslider .swiper-scrollbar").classList.remove("progressAnimation"), e.scrollbar.dragEl.style.animationDuration = "0s" }, groupBy: function (e, i) { return e.reduce(function (e, t) { return (e[t[i]] = e[t[i]] || []).push(t), e }, {}) } }, mounted: function () { axios({ baseURL: "/Component/Index?Name=HomePageNewProducts", method: "get", data: null, headers: { Accept: "application/json", "Content-Type": "application/json", "X-Response-View": "Json" } }).then(e => { this.Model = e.data }).then(function () { hpnslider.Model.forEach(function (e) { e.SpecificationAttributeModels = hpnslider.groupBy(e.SpecificationAttributeModels, "SpecificationAttributeName") }) }) } }), hpnslider = (new HomePageNewProducts).$mount("#hpnslider");