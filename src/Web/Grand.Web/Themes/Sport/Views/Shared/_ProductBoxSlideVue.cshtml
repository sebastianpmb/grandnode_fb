<div class="product-box-slide product-provider">
    <template v-if="Model.ProductPrice.OldPrice !== null">
        <span class="sale-label animate__animated" data-animation="animate__fadeInDownBig" data-delay="animate__delay-05s"> <span>@Loc["Sport.Sale"]</span> </span>
    </template>
    <template v-if="Model.Flag !== null">
        <div class="flag-label animate__animated" v-html="Model.Flag" data-animation="animate__fadeInDownBig" data-delay="animate__delay-1s"></div>
    </template>
    <b-col cols="12">
        <b-row>
            <b-col xl="5" lg="6" md="5" cols="12" class="order-md-1 order-2">
                <div class="content">
                    <h5 class="title mb-0 animate__animated" data-animation="animate__fadeInLeft"> <a :href="'/' + Model.SeName"> {{Model.Name}} </a> </h5>
                    <template v-if="Model.ShowSku && Model.Sku !== null">
                        <span class="sku animate__animated" data-animation="animate__fadeIn">{{Model.Sku}}</span>
                    </template> <div class="desc animate__animated" data-animation="animate__fadeInLeft" data-delay="animate__delay-05s" v-html="Model.ShortDescription"></div>
                    <template v-if="Model.ProductAttributeModels.length > 0">
                        <div class="attr-container animate__animated" data-animation="animate__fadeIn" data-delay="animate__delay-1s">
                            <table>
                                <tbody>
                                    <tr v-for="item in Model.ProductAttributeModels">
                                        <td> <div v-if="item.AttributeControlType !== 40 && item.AttributeControlType !== 45" class="attr-name"> {{item.Name}} </div> </td>
                                        <td>
                                            <div class="attr-value">
                                                <template v-for="spec in item.Values">
                                                    <template v-if="item.AttributeControlType == 1 || item.AttributeControlType == 2 || item.AttributeControlType == 3 || item.AttributeControlType == 50">
                                                        <b-button variant="light" size="sm" class="name" :href="'/'+ Model.SeName + '?' + item.Name + '=' + spec.Name"> {{spec.Name}} </b-button>
                                                    </template>
                                                    <template v-if="item.AttributeControlType == 40">
                                                        <template v-if="spec.ImageSquaresPictureModel.FullSizeImageUrl !== undefined">
                                                            <b-button variant="light" size="sm" class="name color-container" :title="spec.Name" @@click="if(spec.PictureModel.FullSizeImageUrl !== null){productImageSlide($event)}" :data-href="spec.PictureModel.FullSizeImageUrl"> <span class="color" :style="'background-color:' + spec.ColorSquaresRgb">&nbsp;</span> </b-button>
                                                        </template>
                                                        <template v-else>
                                                            <b-button variant="light" size="sm" class="name color-container" :title="spec.Name" :href="'/'+ Model.SeName + '?' + item.Name + '=' + spec.Name"> <span class="color" :style="'background-color:' + spec.ColorSquaresRgb">&nbsp;</span> </b-button>
                                                        </template>
                                                    </template>
                                                    <template v-if="item.AttributeControlType == 45">
                                                        <template v-if="spec.ImageSquaresPictureModel.FullSizeImageUrl !== undefined">
                                                            <b-button variant="light" size="sm" class="p-1 name image-container" @@click="if(spec.PictureModel.FullSizeImageUrl !== null){productImageSlide($event)}" :data-href="spec.PictureModel.FullSizeImageUrl"> <img width="23" height="32" :data-src="spec.ImageSquaresPictureModel.ImageUrl" :alt="spec.Name" class="swiper-lazy" /> <div class="preloader swiper-lazy-preloader"></div> </b-button>
                                                        </template>
                                                        <template v-else>
                                                            <b-button variant="light" size="sm" class="p-1 name image-container" :href="'/'+ Model.SeName + '?' + item.Name + '=' + spec.Name"> <img width="23" height="32" :data-src="spec.ImageSquaresPictureModel.ImageUrl" alt="spec.Name" class="swiper-lazy" /> <div class="preloader swiper-lazy-preloader"></div> </b-button>
                                                        </template>
                                                    </template>
                                                </template>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </template>
                    <template v-if="Model.SpecificationAttributeModels[0] !== null">
                        <div class="spec-container mt-2 animate__animated" data-animation="animate__fadeIn" data-delay="animate__delay-1s">
                            <table>
                                <tbody>
                                    <tr v-for="group in Model.SpecificationAttributeModels">
                                        <template v-if="group[0] !== undefined">
                                            <td>
                                                {{group[0].SpecificationAttributeName}}
                                            </td>
                                            <td v-for="spec in group" v-bind:id="spec.SpecificationAttributeId">
                                                <template v-if="spec.ColorSquaresRgb == null">
                                                    <div class="spec-value"> <span v-html="spec.ValueRaw"></span></div>
                                                </template>
                                            </td>
                                        </template>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </template>
                    <div class="prices animate__animated" v-bind:class="{ 'reservation-price': Model.ProductType == 20 }" data-animation="animate__fadeInLeft" data-delay="animate__delay-1s">
                        <template v-if="Model.ProductType != 40">
                            <div class="actual-price price"> {{Model.ProductPrice.Price}} </div>
                        </template>
                        <template v-else>
                            <div class="actual-price price">
                                <template v-if="Model.ProductPrice.HighestBidValue > 0 ">
                                    {{Model.ProductPrice.HighestBid}}
                                </template>
                                <template v-else>
                                    {{Model.ProductPrice.StartPrice}}
                                </template>
                            </div>
                        </template>
                        <template v-if="Model.ProductPrice.OldPrice !== null">
                            <div class="old-price price"> {{Model.ProductPrice.OldPrice}} </div>
                        </template>
                    </div>
                    <template v-if="Model.ProductType == 40">
                        <template v-if="Model.EndTime !== null">
                            <div class="countdown-box alert alert-info w-100 mb-1 animate__animated" data-animation="animate__fadeInLeft" data-delay="animate__delay-1s">
                                <template v-if="new Date(Model.EndTime).getTime() > new Date().getTime()">
                                    <countdown :end-time="new Date(Model.EndTime).getTime()">
                                        <template v-slot:process="{ timeObj }">
                                            <span class="col-form-label">@Loc["AddToCart.Timeleft"]:</span>
                                            <span>{{ `${timeObj.d}` }} : </span>
                                            <span>{{ `${timeObj.h}` }} : </span>
                                            <span>{{ `${timeObj.m}` }} : </span>
                                            <span>{{ `${timeObj.s}` }}</span>
                                        </template>
                                        <template v-slot:finish>
                                            <span>@Loc["ShoppingCart.Auctionends"]</span>
                                        </template>
                                    </countdown>
                                </template>
                                <template v-else>
                                    <div class="d-inline-flex flex-wrap justify-content-center"> <label class="ended-label">@Loc["ShoppingCart.Auctionends"]:</label> <div class="count-date">{{Model.EndTimeLocalTime.Value}}</div> </div>
                                </template>
                            </div>
                        </template>
                    </template>
                    <div class="button animate__animated" data-animation="animate__fadeIn" data-delay="animate__delay-15s">
                        <template v-if="Model.ShowQty">
                            <input class="form-control input-group-addon catalog-quantity" type="number" :id="'addtocart_' + Model.Id + '_EnteredQuantity'" :name="'addtocart_' + Model.Id + '_EnteredQuantity'" value="1">
                        </template>
                        <template v-if="!Model.ProductPrice.DisableBuyButton">
                            <template v-if="!Model.ShowQty">
                                <a class="add-to-cart-button btn btn-outline-secondary" :onclick="'AxiosCart.addproducttocart_catalog(`@Url.RouteUrl("AddProductCatalog")/' + Model.Id +'/1?quantity=1`, `' + Model.ShowQty +'`,`' + Model.Id + '`);return false;'">
                                    <span class="add-cart-text">
                                        <template v-if="Model.ProductType == 20">
                                            @Loc["ShoppingCart.Reservation"]
                                        </template>
                                        <template v-else>
                                            <template v-if="Model.ProductPrice.AvailableForPreOrder">
                                                @Loc["ShoppingCart.PreOrder"]
                                            </template>
                                            <template v-else>
                                                @Loc["ShoppingCart.AddToCart"]
                                            </template>
                                        </template>
                                    </span> <span class="sr-only">AddToCart</span>
                                </a>
                            </template>
                            <template v-else>
                                <a class="add-to-cart-button  btn btn-outline-secondary" :onclick="'AxiosCart.addproducttocart_catalog(`@Url.RouteUrl("AddProductCatalog")/' + Model.Id +'/2`, `' + Model.ShowQty +'`,`' + Model.Id + '`);return false;'">
                                    <template v-if="Model.ProductType == 20">
                                        @Loc["ShoppingCart.Reservation"]
                                    </template>
                                    <template v-else>
                                        <template v-if="Model.ProductPrice.AvailableForPreOrder">
                                            @Loc["ShoppingCart.PreOrder"]
                                        </template>
                                        <template v-else>
                                            @Loc["ShoppingCart.AddToCart"]
                                        </template>
                                    </template> <span class="sr-only">AddToCart</span>
                                </a>
                            </template>
                        </template>
                        <template v-else>
                            <template v-if="Model.ProductType == 40">
                                <a variant="info" class="add-to-cart-button btn btn-outline-secondary" :onclick="'AxiosCart.addproducttocart_catalog(`@Url.RouteUrl("AddProductCatalog")/' + Model.Id +'/1?quantity=1`, `' + Model.ShowQty +'`,`' + Model.Id + '`);return false;'"> <span class="add-cart-text">@Loc["ShoppingCart.Bids"]</span> <span class="sr-only">AddToCart</span> </a>
                            </template>
                        </template>
                    </div>
                </div>
            </b-col> 
            <div class="col-xl-7 col-lg-6 col-md-7 col-12 order-md-2 order-1">
                <div class="picture-outer animate__animated" data-animation="animate__fadeInRight" data-delay="animate__delay-05s">
                    <a class="img-container" :href="'/' + Model.SeName" :title="Model.DefaultPictureModel.Title">
                        <template v-if="Model.SecondPictureModel.ImageUrl !== null">
                            <img width="740" height="1000" class="swiper-lazy hover-img img-fluid" :alt="Model.SecondPictureModel.AlternateText" :data-src="Model.SecondPictureModel.ImageUrl" />
                        </template>
                        <img width="740" height="1000" :alt="Model.DefaultPictureModel.AlternateText" class="swiper-lazy main-product-img img-fluid" :data-src="Model.DefaultPictureModel.ImageUrl" :title="Model.DefaultPictureModel.Title" />
                        <div class="preloader swiper-lazy-preloader"></div>
                    </a>
                </div>
            </div>
        </b-row>
    </b-col>
</div>