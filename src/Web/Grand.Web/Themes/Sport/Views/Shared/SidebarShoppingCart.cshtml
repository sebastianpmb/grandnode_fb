@inject IWorkContext workContext

@{
    var supportRtl = workContext.WorkingLanguage.Rtl;
}
<li class="nav-item">
    <ul class="sidebar-cart px-0">
        <b-nav-item @@click="if(flycartfirstload){updateFly()}" v-b-toggle.sidebar-cart>
            <span class="icon-basket icons"></span>
            <span class="qty-indicator cart-qty">
                <template v-if="flycartindicator == null">
                    @Loc["ShoppingCart.HeaderQuantity", Model]
                </template>
                <template v-else>
                    {{flycartindicator}}
                </template>
            </span>
        </b-nav-item>
        <template>
            <li>
                <b-sidebar id="sidebar-cart" backdrop @if (supportRtl) { <text> left </text> } else { <text> right </text> } bg-variant="white" text-variant="standard">
                    <template v-slot:title v-if="flycartindicator > 0">
                        @Html.Raw(string.Format(Loc["ShoppingCart.Mini.ItemsText"], string.Format("<a href=\"{0}\">{1}</a>", Url.RouteUrl("ShoppingCart"), string.Format(Loc["ShoppingCart.Mini.Items"], "{{flycartindicator}}"))))
                    </template>
                    <template v-slot:title v-else>
                        @Loc["ShoppingCart.Mini.NoItems"]
                    </template>
                    <div class="d-flex justify-content-center align-items-center h-100" v-if="flycartitems == undefined">
                        <div class="spinner-border text-gold" role="status">
                        </div>
                    </div>
                    <div v-for="item in flycartitems" class="item d-inline-flex no-wrap">
                        <b-link :href="'/' + item.ProductSeName" :title="item.Picture.Title" v-if="item.Picture.ImageUrl">
                            <b-img :alt="item.Picture.AlternateText" :src="item.Picture.ImageUrl" :title="item.Picture.Title" fluid></b-img>
                        </b-link>
                        <b-col>
                            <b-link :href="'/' + item.ProductSeName">{{item.ProductName}}</b-link>
                            <div class="attributes p-2" v-if="item.AttributeInfo">
                                <div v-html="item.AttributeInfo"></div>
                            </div>
                            <div class="price"><span>@Loc["ShoppingCart.Mini.UnitPrice"]:</span> <strong>{{item.UnitPrice}}</strong></div>
                            <div class="quantity"><span>@Loc["ShoppingCart.Mini.Quantity"]:</span> <strong>{{item.Quantity}}</strong></div>
                        </b-col>
                        <div>
                            <b-link class="deletecartitem" :data-href="item.Id" data-store-url="@Url.RouteUrl("DeleteCartItem")" onclick="deletecartitem(this.getAttribute('data-store-url') +'/'+ this.getAttribute('data-href'))">
                                <span class="deletecartitem icon-trash icons text-danger"></span>
                            </b-link>
                        </div>
                    </div>
                    <template v-slot:footer v-if="flycartindicator > 0">
                        <b-col cols="12" class="p-3">
                            <b-row>
                                <b-col lg="6" cols="5" class="text-center d-flex flex-column">
                                    <span class="h5 mb-0">@Loc["ShoppingCart.Totals.SubTotal"]:</span>
                                    <span class="h4 mb-0">{{flycart.SubTotal}}</span>
                                </b-col>
                                <b-col lg="6" cols="7" class="text-center d-flex justify-content-center align-items-center">
                                    <b-button v-if="flycart.DisplayShoppingCartButton" variant="secondary" class="cart-button w-100 h-100 text-uppercase" @@click="location='@Url.RouteUrl("ShoppingCart")'">@Loc["ShoppingCart.Mini.ViewCart"]</b-button>
                                    <div v-if="flycart.DisplayCheckoutButton" class="w-100 h-100">
                                        <div v-if="flycart.CurrentCustomerIsGuest && flycart.CurrentCustomerIsGuest">
                                            <b-button variant="secondary" class="checkout-button w-100 h-100 text-uppercase" onclick="location='@Url.RouteUrl("LoginCheckoutAsGuest", new { returnUrl = Url.RouteUrl("ShoppingCart") })'">@Loc["Checkout.Button"]</b-button>
                                        </div>
                                        <div v-else>
                                            <b-button variant="secondary" class="checkout-button w-100 h-100 text-uppercase" onclick="location='@Url.RouteUrl("Checkout")'">@Loc["Checkout.Button"]</b-button>
                                        </div>
                                    </div>
                                </b-col>
                            </b-row>
                        </b-col>
                    </template>
                    <template v-else-if="flycartindicator !== undefined">
                        <div class="d-flex flex-column justify-content-center align-items-center">
                            <span class="icons icon-basket no-items-icon"></span>
                            <div class="text-center text-muted mt-3">@Loc["ShoppingCart.Mini.NoDataText"]</div>
                        </div>
                    </template>
                </b-sidebar>
            </li>
        </template>
    </ul>
</li>