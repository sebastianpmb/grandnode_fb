@model Grand.Plugin.Widgets.AjaxFilters.Models.FilterProductAttributesModel
@using Grand.Plugin.Widgets.AjaxFilters

@if (Model.ProductVariantAttributes.Any())
{
    <div id="attribute-filter-section">
        @{ int j = 0; }
        @foreach (var attributes in Model.ProductVariantAttributes)
        {
            <div class="filter-section Name-@(attributes.Id)" data-id="@(attributes.Id)">
                <div class="title">
                    <span class="ajaxfilter-title" style="float:left">@attributes.Name</span>
                    <span class="arrowHold"></span>
                </div>
                <div class="ajaxfilter-section">
                    <input type="hidden" name="attributesModel][ProductVariantAttributes][@j][Name" value="@(attributes.Name)">
                    <input type="hidden" name="attributesModel][ProductVariantAttributes][@j][Id" value="@(attributes.Id)">
                    @if (Model.CheckOrDropdowns == AjaxFiltersUI.UseCheckboxes)
                    {
                        <ul>
                            @for (int i = 0; i < attributes.ProductVariantAttributesOptions.OrderBy(spo => spo.Name).Count(); i++)
                            {

                                var item = attributes.ProductVariantAttributesOptions.OrderBy(pva => pva.Name).ElementAt(i);


                                <li class="square id-@item.Name @item.Name id-@(item.Name.Replace(" ", "-").Replace(".", "-").Replace("/", "-")) @(item.Name.Replace(" ", "-").Replace(".", "-").Replace("/", "-")) @(item.CheckedState == CheckedState.Checked ? "active" : "") Name-@(item.Name.Replace(" ", "-").Replace(".", "-").Replace("/", "-"))" id="square_specyficationModel_SpecificationAttributes_@(item)_@(i)_Id"></li>

                                <li data-id="@item.Name">
                                    <input class="@(item.Name.Replace(" ", "-").Replace(".", "-").Replace("/", "-")) id-@(item.Name.Replace(" ", "-").Replace(".", "-").Replace("/", "-"))" type="checkbox" name="attributesModel][ProductVariantAttributes][@j][ProductVariantAttributesOptions][@i][Name" value="@item.Name" id="attributesModel_ProductVariantAttributesOptions_@(item.Name)_@(i)_Id"
                                           @(item.CheckedState == CheckedState.Checked ? "Checked" : "")
                                           @(item.CheckedState == CheckedState.Disabled ? "Disabled" : "")
                                           @(item.CheckedState == CheckedState.CheckedDisabled ? "Disabled Checked" : "")
                                           onchange="listenToCheckBox(this, '@(item.Name.Replace(" ", "-").Replace(".", "-").Replace("/", "-"))', '@item.Name'), resetFilters()"
                                           onclick="AjaxFilter.setFilter('a-@(attributes.Id)')" />
                                    <input type="hidden" name="attributesModel][ProductVariantAttributes][@j][ProductVariantAttributesOptions][@i][Name" value=@(item.CheckedState == CheckedState.CheckedDisabled ? item.Name : "")>
                                    <input type="hidden" name="attributesModel][ProductVariantAttributes][@j][ProductVariantAttributesOptions][@i][Count" value="@item.Count">
                                    <label for="attributesModel_ProductVariantAttributesOptions_@(item.Name)_@(i)_Id">@item.Name <span>(@item.Count)</span></label>
                                </li>
                            }
                        </ul>
                    }
                    else if (Model.CheckOrDropdowns == AjaxFiltersUI.UseDropdowns)
                    {
                        <select class="form-control custom-select" name="attributesModel][ProductVariantAttributes][@j][ProductVariantAttributesOptions][0][Name" id="attributesModel_ProductVariantAttributesOptions_@(j)_Name" onchange="AjaxFilter.setFilter('a-@(attributes.Id)'), listenToSelect('attributesModel_ProductVariantAttributesOptions_@(j)_Name')">
                            <option value="" selected="selected">@(attributes.ProductVariantAttributesOptions.Where(x => x.CheckedState != CheckedState.Disabled).Count() > 0 ? Loc["Plugin.Widgets.AjaxFilters.Filter.All"] : Loc["Plugin.Widgets.AjaxFilters.Filter.Empty"])</option>
                            @foreach (var item in attributes.ProductVariantAttributesOptions.Where(x => x.CheckedState != CheckedState.Disabled).OrderBy(pva => pva.Name))
                            {
                                var selected = item.CheckedState == CheckedState.Checked || item.CheckedState == CheckedState.CheckedDisabled;
                                <option value="@item.Name" selected="@selected">@item.Name</option>
                            }
                        </select>
                    }
                </div>
            </div>
            j++;
        }
    </div>
}